"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/regresilinear/page",{

/***/ "(app-pages-browser)/./src/app/regresilinear/store.js":
/*!****************************************!*\
  !*** ./src/app/regresilinear/store.js ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\nconst Store = {\n    state: {\n        totalRow: 4,\n        valuesX: [],\n        valuesY: [],\n        cX: [],\n        cY: [],\n        cX2: [],\n        cY2: [],\n        cXY: [],\n        convertedXY: [],\n        clicked: false,\n        sumX: 0,\n        sumY: 0,\n        sumX2: 0,\n        sumY2: 0,\n        sumXY: 0,\n        b: 0,\n        b_1: 0,\n        b_2: 0,\n        b_3: 0,\n        penyebut_1: 0,\n        penyebut_2: 0,\n        penyebut_3: 0,\n        deltaY: 0,\n        deltaY2: 0,\n        deltaY2_1: 0,\n        deltaY2_2: 0,\n        deltaY2_3: 0,\n        deltaY2_4: 0,\n        deltaY2_5: 0,\n        deltaY2_6: 0,\n        deltaB: 0,\n        tingkatKetelitian: 0,\n        pembulatan: true,\n        belakangDesimal: 10000\n    },\n    action: {\n        calculationHandler (state) {\n            Store.state.belakangDesimal = Store.state.belakangDesimal;\n            Store.state.values.forEach((eachValue)=>{\n                eachValue.x2 = Math.round(eachValue.x * eachValue.x * Store.state.belakangDesimal) / Store.state.belakangDesimal;\n                eachValue.y2 = Math.round(eachValue.y * eachValue.y * Store.state.belakangDesimal) / Store.state.belakangDesimal;\n                eachValue.xy = Math.round(eachValue.x * eachValue.y * Store.state.belakangDesimal) / Store.state.belakangDesimal;\n                Store.state.sum_x += eachValue.x;\n                Store.state.sum_y += eachValue.y;\n                Store.state.sum_x2 += eachValue.x2;\n                Store.state.sum_y2 += eachValue.y2;\n                Store.state.sum_xy += eachValue.xy;\n            });\n            Store.state.sum_x = Math.round(Store.state.sum_x * Store.state.belakangDesimal) / Store.state.belakangDesimal;\n            Store.state.sum_y = Math.round(Store.state.sum_y * Store.state.belakangDesimal) / Store.state.belakangDesimal;\n            Store.state.sum_x2 = Math.round(Store.state.sum_x2 * Store.state.belakangDesimal) / Store.state.belakangDesimal;\n            Store.state.sum_y2 = Math.round(Store.state.sum_y2 * Store.state.belakangDesimal) / Store.state.belakangDesimal;\n            Store.state.sum_xy = Math.round(Store.state.sum_xy * Store.state.belakangDesimal) / Store.state.belakangDesimal;\n            //Eksperimen\n            Store.state.b_1 = Math.round(Store.state.values.length * Store.state.sum_xy * Store.state.belakangDesimal) / Store.state.belakangDesimal, Store.state.b_2 = Math.round(Store.state.sum_x * Store.state.sum_y * Store.state.belakangDesimal) / Store.state.belakangDesimal, Store.state.b_3 = Math.round((Store.state.b_1 - Store.state.b_2) * Store.state.belakangDesimal) / Store.state.belakangDesimal;\n            Store.state.penyebut_1 = Math.round(Store.state.values.length * Store.state.sum_x2 * Store.state.belakangDesimal) / Store.state.belakangDesimal, Store.state.penyebut_2 = Math.round(Store.state.sum_x * Store.state.sum_x * Store.state.belakangDesimal) / Store.state.belakangDesimal;\n            Store.state.penyebut_3 = Math.round((Store.state.penyebut_1 - Store.state.penyebut_2) * Store.state.belakangDesimal) / Store.state.belakangDesimal;\n            Store.state.deltaY2_1 = Math.round(Store.state.sum_x2 * Store.state.sum_y * Store.state.sum_y * Store.state.belakangDesimal) / Store.state.belakangDesimal, Store.state.deltaY2_2 = Math.round(2 * Store.state.sum_x * Store.state.sum_y * Store.state.sum_xy * Store.state.belakangDesimal) / Store.state.belakangDesimal, Store.state.deltaY2_3 = Math.round(Store.state.values.length * Store.state.sum_xy * Store.state.sum_xy * Store.state.belakangDesimal) / Store.state.belakangDesimal, Store.state.deltaY2_4 = Math.round((Store.state.deltaY2_1 - Store.state.deltaY2_2 + Store.state.deltaY2_3) * Store.state.belakangDesimal) / Store.state.belakangDesimal, Store.state.deltaY2_5 = Math.round(Store.state.deltaY2_4 / Store.state.penyebut_3 * Store.state.belakangDesimal) / Store.state.belakangDesimal, Store.state.deltaY2_6 = Math.round((Store.state.sum_y2 - Store.state.deltaY2_5) * Store.state.belakangDesimal) / Store.state.belakangDesimal, Store.state.deltaB_1 = Math.round(Store.state.values.length / Store.state.penyebut_3 * Store.state.belakangDesimal) / Store.state.belakangDesimal, Store.state.deltaB_2 = Math.round(Math.sqrt(Store.state.deltaB_1) * Store.state.belakangDesimal) / Store.state.belakangDesimal;\n            if (Store.state.pembulatan == true) {\n                Store.state.b = Math.round((Store.state.values.length * Store.state.sum_xy - Store.state.sum_x * Store.state.sum_y) / (Store.state.values.length * Store.state.sum_x2 - Store.state.sum_x * Store.state.sum_x) * Store.state.belakangDesimal) / Store.state.belakangDesimal;\n                Store.state.deltaY = Math.round(Math.sqrt(Math.round(1 / (Store.state.values.length - 2) * (Store.state.sum_y2 - (Store.state.sum_x2 * (Store.state.sum_y * Store.state.sum_y) - 2 * Store.state.sum_x * Store.state.sum_y * Store.state.sum_xy + Store.state.values.length * Store.state.sum_xy * Store.state.sum_xy) / (Store.state.values.length * Store.state.sum_x2 - Store.state.sum_x * Store.state.sum_x)) * Store.state.belakangDesimal) / Store.state.belakangDesimal) * Store.state.belakangDesimal) / Store.state.belakangDesimal;\n                Store.state.deltaY2 = Math.round(1 / (Store.state.values.length - 2) * (Store.state.sum_y2 - (Store.state.sum_x2 * (Store.state.sum_y * Store.state.sum_y) - 2 * Store.state.sum_x * Store.state.sum_y * Store.state.sum_xy + Store.state.values.length * Store.state.sum_xy * Store.state.sum_xy) / (Store.state.values.length * Store.state.sum_x2 - Store.state.sum_x * Store.state.sum_x)) * Store.state.belakangDesimal) / Store.state.belakangDesimal;\n                Store.state.deltaB = Math.round(Store.state.deltaY * Math.sqrt(Store.state.values.length) / Math.sqrt(Store.state.values.length * Store.state.sum_x2 - Store.state.sum_x * Store.state.sum_x) * Store.state.belakangDesimal) / Store.state.belakangDesimal;\n                Store.state.tingkatKetelitian = Math.round((1 - Store.state.deltaB / Store.state.b) * 100 * Store.state.belakangDesimal) / Store.state.belakangDesimal;\n            } else {\n                Store.state.b = (Store.state.values.length * Store.state.sum_xy - Store.state.sum_x * Store.state.sum_y) / (Store.state.values.length * Store.state.sum_x2 - Store.state.sum_x * Store.state.sum_x);\n                Store.state.deltaY = Math.sqrt(1 / (Store.state.values.length - 2) * (Store.state.sum_y2 - (Store.state.sum_x2 * (Store.state.sum_y * Store.state.sum_y) - 2 * Store.state.sum_x * Store.state.sum_y * Store.state.sum_xy + Store.state.values.length * Store.state.sum_xy * Store.state.sum_xy) / (Store.state.values.length * Store.state.sum_x2 - Store.state.sum_x * Store.state.sum_x)));\n                Store.state.deltaY2 = 1 / (Store.state.values.length - 2) * (Store.state.sum_y2 - (Store.state.sum_x2 * (Store.state.sum_y * Store.state.sum_y) - 2 * Store.state.sum_x * Store.state.sum_y * Store.state.sum_xy + Store.state.values.length * Store.state.sum_xy * Store.state.sum_xy) / (Store.state.values.length * Store.state.sum_x2 - Store.state.sum_x * Store.state.sum_x));\n                Store.state.deltaB = Store.state.deltaY * Math.sqrt(Store.state.values.length) / Math.sqrt(Store.state.values.length * Store.state.sum_x2 - Store.state.sum_x * Store.state.sum_x);\n                Store.state.tingkatKetelitian = (1 - Store.state.deltaB / Store.state.b) * 100;\n            }\n            Store.state.clicked = true;\n            console.log(state);\n        },\n        getters: {\n            totalRow: (state)=>{\n                return Store.state.totalRow;\n            },\n            values: (state)=>{\n                return Store.state.values;\n            }\n        }\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (Store);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/regresilinear/store.js\n"));

/***/ })

});